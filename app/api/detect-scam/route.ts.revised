import { NextRequest, NextResponse } from 'next/server';

// API key is now expected to be in an environment variable
const GEMINI_API_KEY = process.env.GEMINI_API_KEY;
// Construct the URL only if the API key is present
// Updated to use gemini-2.0-flash model for improved performance and capabilities
const GEMINI_API_URL = GEMINI_API_KEY ? `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${GEMINI_API_KEY}` : '';

interface ReportAgency {
  name: string;
  link: string;
}

// Interface for limited context information
interface ContextInfo {
  type: string;
  details: string;
  recommendations: string[];
}

// eslint-disable-next-line @typescript-eslint/no-unused-vars
interface ScamDetectionResponse {
  status: string; // e.g., "Low Risk Detected"
  assessment: string; // e.g., "Likely Not a Scam"
  scam_probability: string; // e.g., "10%"
  ai_confidence: string; // e.g., "High"
  explanation_english: string;
  explanation_tagalog: string;
  advice: string;
  how_to_avoid_scams: string[];
  where_to_report: ReportAgency[];
  what_to_do_if_scammed: string[]; // Steps to take if you've been scammed (English)
  what_to_do_if_scammed_tagalog: string[]; // Steps to take if you've been scammed (Tagalog)
  true_vs_false: string; // How to differentiate between true and false information (English)
  true_vs_false_tagalog: string; // How to differentiate between true and false information (Tagalog)
  image_analysis?: string; // Optional analysis of image content if provided
  audio_analysis?: string; // Optional analysis of audio content if provided
  keywords?: string[]; // Key scam indicators extracted from the analysis
  content_type?: string; // Type of content analyzed (text, image, audio)
  detection_timestamp?: string; // ISO timestamp of when detection was performed
  limited_context?: ContextInfo; // Information about limited context scenarios
  raw_gemini_response?: string; // For debugging
}

interface GeminiResponsePart {
  text: string;
}

interface GeminiResponseCandidate {
  content: {
    parts: GeminiResponsePart[];
    role: string;
  };
  // Add other candidate properties if needed, like finishReason, safetyRatings, etc.
}

interface GeminiApiResponse {
  candidates?: GeminiResponseCandidate[];
  // Add other top-level response properties if needed, like promptFeedback
}

// Map risk level to status
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function mapRiskLevelToStatus(riskLevel: string): string {
  switch (riskLevel?.toLowerCase()) {
    case 'very high':
      return 'High Risk Detected';
    case 'high':
      return 'High Risk Detected';
    case 'medium':
      return 'Medium Risk Detected';
    case 'low':
      return 'Low Risk Detected';
    default:
      return 'Normal Conversation';
  }
}

// Extract keywords from text
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function extractKeywords(text: string): string[] {
  if (!text) return [];
  
  const keywords: string[] = [];
  const lowerText = text.toLowerCase();
  
  // Common scam-related keywords
  const scamKeywords = [
    'urgent', 'immediate', 'verify', 'account', 'banking', 'password',
    'prize', 'winner', 'lottery', 'investment', 'bitcoin', 'cryptocurrency',
    'gift card', 'payment', 'transfer', 'hack', 'suspicious', 'government',
    'bank', 'security', 'fraud', 'alert', 'access', 'limited time',
    'phishing', 'scam', 'warning', 'verify', 'social security', 'tax'
  ];
  
  scamKeywords.forEach(keyword => {
    if (lowerText.includes(keyword)) {
      keywords.push(keyword);
    }
  });
  
  return keywords;
}

// Function for audio analysis with Gemini
async function analyzeWithGeminiAudio(content: string, audioBase64: string, imageBase64?: string): Promise<any> {
  if (!GEMINI_API_URL) {
    throw new Error('Gemini API URL is not configured due to missing API key.');
  }  const prompt = `You are an elite audio content analyst and language specialist with expertise in Philippine and Southeast Asian languages, contexts, and communication patterns. Your task is to perform a comprehensive analysis of the provided audio recording to explain its content, purpose, and context. The user is likely in the Philippines and would like to understand what this audio recording is about.

${content.trim() ? `Additional context provided by user: "${content}"` : "No additional text context provided by the user."}
${imageBase64 ? "An image has also been provided for analysis alongside the audio, which may provide additional context or supplementary information." : ""}

SPECIAL INSTRUCTIONS FOR AUDIO CONTENT ANALYSIS:
The user may want to understand "Para saan ito?" (What is this for?) or "Ano ito?" (What is this?) regarding an audio recording. Analyze the audio content to provide a clear explanation, regardless of its nature or purpose. If the audio appears to be:
1. Describing a website or service - explain its purpose, features, functions, and intended audience
2. Promoting a product or service - analyze the claims, offerings, target market, and value proposition
3. Requesting action - evaluate what action is being requested and for what purpose
4. Providing information - summarize the key information and context
5. Educational content - explain the learning objectives and subject matter
6. In Filipino languages - transcribe key phrases and identify the dialect or language variant
7. Personal communication - identify the general topic and purpose while respecting privacy

Conduct a thorough audio analysis with attention to voice characteristics, linguistic patterns, communication intent, and cultural context relevant to the Philippines and Southeast Asia.

Provide a structured JSON response with the following fields:

- "contentType": string (Classify what type of audio this is: phone call, voice message, advertisement, public announcement, educational content, entertainment, etc.)
- "contentPurpose": string (Detailed explanation of what this audio is trying to accomplish or communicate)
- "confidenceLevel": string (your confidence level in your analysis: "Low", "Medium", or "High", based on audio quality, clarity, and comprehensiveness)
- "mainExplanation": string (A comprehensive explanation of the audio content in English, including subject matter, key messages, context, and purpose. Format for readability with paragraphs and bullet points as needed.)
- "explanationTagalog": string (An accurate and natural-sounding Tagalog translation of the main explanation that preserves all details but adapts to local context and idioms)
- "audienceAnalysis": string (Who appears to be the target audience and why this content would be relevant to them)
- "culturalContext": string (Relevant Filipino or Southeast Asian cultural elements or references that help contextualize the content)
- "keyPoints": array of strings (List of 4-6 key points or main ideas conveyed in the audio content)
- "audioQualityAssessment": object with the following fields:
    - "quality": string (Assessment of the audio quality: "Poor", "Fair", "Good", "Excellent")
    - "issues": array of strings (List any audio quality issues that affect comprehension)
    - "enhancementSuggestions": string (If applicable, suggestions for better audio quality in similar contexts)
- "audioAnalysis": string (Thorough analysis of the voice recording including:
    1. Transcription of key statements and phrases
    2. Analysis of voice characteristics (pitch, tone, rhythm, accent, language variants)
    3. Background elements and context
    4. Production quality assessment
    5. Communication techniques employed
    6. Linguistic pattern analysis (choice of words, grammar structures, code-switching between English and Tagalog/other Filipino languages)
    7. Classification of content type)
- "contentVerification": string (If applicable, provide a balanced perspective on how to verify or further investigate the claims or information presented in the audio)
- "contentVerificationTagalog": string (A natural, culturally-appropriate Tagalog translation of the content verification explanation that incorporates local context)
- "contentDetails": object with the following fields:
    - "format": string (The format of the audio: conversation, monologue, interview, advertisement, etc.)
    - "duration": string (Approximate duration of the audio if discernible)
    - "speakers": number (Estimated number of distinct speakers in the audio)
    - "languages": array of strings (Languages or dialects used in the audio)
    - "contentSummary": string (Concise summary of what the audio is about in plain language that non-technical users will understand)
    - "contentSummaryTagalog": string (A natural Tagalog translation of the content summary that ordinary Filipino users can easily understand)

When analyzing the audio content, conduct a multi-factor assessment including:
1. Voice characteristics: tone patterns, emotional expression, natural vs. scripted speech, accent and dialect identification
2. Communication techniques: persuasion methods, storytelling elements, information delivery style, engagement approaches
3. Technical aspects: audio quality, background elements, production value, environmental context
4. Content analysis: main message, supporting points, call to action (if any), information accuracy when verifiable
5. Voice authenticity assessment: natural speech patterns, consistency in delivery, voice dynamics
6. Speaker characteristics: gender, approximate age, formal vs. casual speaking style, expertise level

Pay special attention to these Filipino communication elements:
- Use of English, Tagalog, and code-switching patterns
- Cultural references specific to the Philippines
- Mentions of local services, brands, or institutions (GCash, PayMaya, Lazada, Shopee, Jollibee, etc.)
- Regional dialect identification (Bisaya, Ilokano, etc. if applicable)
- Community-oriented references reflecting Filipino values
- Formal vs. informal communication styles in Philippine context
- Humor or expressions unique to Filipino communication
- References to current events or popular culture in the Philippines
- Religious or familial references common in Filipino discourse
- Politeness markers and honorifics in Filipino languages

${imageBase64 ? "Integrate the provided image into your analysis, looking for connections between the audio content and visual elements. The image may provide context, supporting information, or visual cues that complement the audio content. Analyze how the image and audio work together to convey a complete message." : ""}

Additional analysis guidelines:
1. For audio with multiple speakers, analyze each speaker's role, contribution, and relationship to the overall message.
2. If you detect synthetic or AI-generated voice elements, note this as part of your technical analysis.
3. For recordings with background noise, consider how the environment contributes to the context and meaning.
4. If the recording appears to be partial or fragmented, note what context might be missing.
5. For very short recordings, acknowledge limitations while providing maximum insight from available audio.
6. Consider cultural context of Filipino communication styles to accurately interpret tone, emphasis, and meaning.
7. Note any code-switching between languages and analyze its purpose in communication.
8. If the audio contains both information and promotional elements, distinguish between them.
9. If the user appears to be asking "Para saan ito?" (What is this for?) or "Ano ito?" (What is this?), prioritize a clear explanation of the content's purpose in simple, accessible language.
10. For website descriptions in audio, provide a comprehensive explanation of what the website is for, its features, and target audience.
11. Pay attention to Filipino-specific services mentioned and explain their relevance to the content.
12. Provide explanations in simple everyday language that people with limited technical knowledge can understand, especially in the Tagalog translations.

Ensure your entire response is ONLY the JSON object, with no additional text, comments, or markdown formatting like \`\`\`json ... \`\`\` around it. The JSON must be properly formatted with all string values properly escaped. Each required field must be present in your response even if some have minimal information due to audio limitations or ambiguity.`;

  try {
    // Prepare the request body
    const requestBody: any = {
      contents: [{
        parts: [{
          text: prompt
        }]
      }]
    };

    // Add audio data to the request
    requestBody.contents[0].parts.push({
      inline_data: {
        mime_type: 'audio/webm', // Webm is the format we use for browser recordings
        data: audioBase64
      }
    });

    // If image is provided, add it to the request too
    if (imageBase64) {
      requestBody.contents[0].parts.push({
        inline_data: {
          mime_type: 'image/jpeg',
          data: imageBase64
        }
      });
    }

    const response = await fetch(GEMINI_API_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(requestBody),
    });

    if (!response.ok) {
      const errorBody = await response.text();
      console.error('Gemini API Error Response for Audio Analysis:', errorBody);
      throw new Error(`Gemini API request failed with status ${response.status}: ${errorBody}`);
    }
    
    const data: GeminiApiResponse = await response.json();
    console.log('Gemini API Full Raw Response Object for Audio Analysis:', JSON.stringify(data, null, 2));
    
    // Extract the text content from the response
    const textContent = data.candidates?.[0]?.content?.parts?.[0]?.text;
    if (!textContent) {
      throw new Error('No text content found in Gemini response');
    }
    
    try {
      // Clean the text content to remove markdown backticks if present
      let cleanedTextContent = textContent.trim();
      if (cleanedTextContent.startsWith("```json")) {
        cleanedTextContent = cleanedTextContent.substring(7); // Remove ```json
      }
      if (cleanedTextContent.endsWith("```")) {
        cleanedTextContent = cleanedTextContent.substring(0, cleanedTextContent.length - 3); // Remove ```
      }
      cleanedTextContent = cleanedTextContent.trim(); // Trim any remaining whitespace

      // Parse the JSON response directly
      const jsonResponse = JSON.parse(cleanedTextContent);
      return jsonResponse;
    } catch (error) {
      console.error('Error parsing JSON from Gemini response:', error);
      throw new Error(`Failed to parse JSON from Gemini response: ${(error as Error).message}`);
    }

  } catch (error) {
    console.error('Error calling Gemini API for audio analysis:', error);
    throw error; // Re-throw the error to be caught by the POST handler
  }
}

async function analyzeWithGemini(content: string, imageBase64?: string): Promise<any> {  
  if (!GEMINI_API_URL) { // Check if the URL is empty (meaning API key was missing)
    throw new Error('Gemini API URL is not configured due to missing API key.');
  }    const prompt = `You are an elite cybersecurity, fraud detection, and risk assessment specialist with expertise in Philippine scams, global digital threats, and potentially harmful content. Your task is to thoroughly analyze the ${content.trim() ? "following text" : "provided image"} for any signs of scam, phishing, fraudulent activity, misinformation, dangerous content, or other potential risks. The user is likely in the Philippines and needs a comprehensive assessment of all potential hazards.

${content.trim() ? `Content to analyze: "${content}"` : "No text provided for analysis."}
${imageBase64 ? (content.trim() ? "An image has also been provided for analysis alongside the text." : "Only an image has been provided for analysis.") : ""}

SPECIAL INSTRUCTIONS FOR WEBSITE ANALYSIS AND RISK ASSESSMENT:
If the content appears to be a website URL or description of a website, provide an in-depth analysis including:
1. Website purpose identification - what the site claims to be for and its potential risks
2. Website legitimacy assessment - whether it appears to be what it claims with multiple verification points
3. Registration information analysis - domain age, ownership transparency, registration patterns that indicate risk
4. Content analysis - professional vs. suspicious elements, misleading information, dangerous content
5. Security indicators - https, certificates, privacy policies, data collection practices, permissions requested
6. Risk patterns analysis - comparison with known scam, phishing, and malicious website patterns
7. Target audience vulnerability assessment - why specific demographics might be at risk and impact level
8. Filipino-specific risk indicators - cultural, linguistic or regional factors that increase danger to local users
9. Technical risk assessment - potential malware, phishing infrastructure, suspicious redirects, data harvesting
10. Safe browsing recommendations specific to the identified risks
11. Content trustworthiness evaluation - accuracy, source credibility, factual consistency
12. Potential harm classification - financial, personal data, misinformation, illegal activities, malicious software

Conduct a comprehensive forensic analysis and risk assessment of the ${content.trim() ? "text" : "image"} with particular attention to all types of potential dangers including scams, misinformation, harmful content, privacy threats, technical vulnerabilities, and manipulation tactics prevalent in the Philippines and Southeast Asia. Consider language patterns, urgency indicators, request types, technical elements, contextual red flags, psychological manipulation tactics, and potential harm vectors. 

For all content, conduct a full-spectrum risk assessment:
- RISK IDENTIFICATION: Identify ALL potential risks - scams, phishing, fraud, misinformation, dangerous advice, harmful content, malicious links/software, privacy violations, etc.
- RISK PROBABILITY: Assess the likelihood of each identified risk using multiple indicators
- RISK SEVERITY: Evaluate the potential negative impact and consequences if the user engages with this content
- RISK URGENCY: Determine how immediately dangerous this content might be (immediate vs. latent risks)
- RISK CLASSIFICATION: Categorize the type of danger (financial, privacy, personal safety, misinformation, etc.)

For text content, especially analyze:
- CONTEXT PURPOSE: What is this text attempting to accomplish? Identify both stated and potential hidden purposes.
- CONTENT TYPE: Is this a message, email, website text, advertisement, news article, or something else?
- LANGUAGE ANALYSIS: Evaluate both English and Filipino language elements (Tagalog, Bisaya, etc.), including grammar, style, formality, and manipulation tactics
- TARGET IDENTIFICATION: Who is this content targeting and why? Assess vulnerability factors for the target audience
- CULTURAL ELEMENTS: Filipino-specific references, cultural touchpoints, or localized approaches that might be exploited
- TRUTH ASSESSMENT: Evaluate factual accuracy, source credibility, consistency, and potential misinformation
- REQUEST ANALYSIS: What is the content asking for? Identify explicit and implicit requests that pose risk
- TECHNICAL INDICATORS: Analyze URLs, formatting, technical elements for malicious components
- MANIPULATION TACTICS: Identify psychological tactics like urgency, authority abuse, scarcity, social proof, reciprocity
- THREAT MODELING: What would happen if a user fully trusted and acted on this content? Map potential harm vectors

For URLs and website descriptions, provide comprehensive explanation of what the website is for, whether it's legitimate, and what users should know about it in both English and Tagalog.

Provide a structured JSON response with the following fields:

- "isRisky": boolean (true if the content contains ANY potential risks, scams, harmful elements, or misinformation, false only if completely safe).
- "riskCategories": array of strings (list all risk categories detected: "Scam", "Phishing", "Misinformation", "Privacy Risk", "Malware", "Financial Risk", "Identity Theft Risk", "Manipulation", "Harmful Content", "Data Collection", etc. If none, provide empty array).
- "overallRiskProbability": number (a percentage from 0 to 100 indicating the overall likelihood of ANY risk being present, being precise in your assessment).
- "scamProbability": number (a percentage from 0 to 100 indicating the likelihood of it being a scam specifically).
- "confidenceLevel": string (your confidence level in your overall assessment: "Low", "Medium", or "High", based on the quality and quantity of indicators present).
- "detailedRiskAnalysis": string (a comprehensive explanation of your findings in English, highlighting ALL potential risks including scams, misinformation, harmful content, technical threats, manipulation tactics, etc. Clearly identify ALL red flags, linguistic patterns, technical indicators, suspicious elements, factual inaccuracies, and potential harm vectors. Include your reasoning process for each risk identified. Format for readability with clear sections, paragraphs and bullet points as needed).
- "detailedRiskAnalysisTagalog": string (an accurate and natural-sounding Tagalog translation of the "detailedRiskAnalysis" that preserves all technical details but adapts to local context).
- "overallRiskLevel": string (categorize the HIGHEST risk detected based on probability AND severity: "Low", "Medium", "High", "Very High", or "Critical").
- "riskBreakdown": object with the following fields (analyze each major risk category separately):
    - "scamRisk": object with "level" (string), "probability" (number), "indicators" (array of strings)
    - "misinformationRisk": object with "level" (string), "probability" (number), "indicators" (array of strings)
    - "privacyRisk": object with "level" (string), "probability" (number), "indicators" (array of strings)
    - "technicalRisk": object with "level" (string), "probability" (number), "indicators" (array of strings)
    - "manipulationRisk": object with "level" (string), "probability" (number), "indicators" (array of strings)
    - "otherRisks": array of objects, each with "name" (string), "level" (string), "probability" (number), "indicators" (array of strings)
- "safetyAdvice": string (provide detailed, actionable safety advice in English specific to ALL risks identified. For high risk scenarios, include specific protective actions the user should take immediately. For medium-low risk, provide contextual safety practices. Include both immediate steps and longer-term protective measures).
- "safetyTutorials": array of strings (provide 6-8 detailed, actionable tutorials in English on how to identify and protect against ALL types of risks identified. Each tutorial should be comprehensive yet concise, include the reasoning behind it, examples of what to look for, and be directly relevant to the specific risks in the analyzed content. Cover different risk categories - not just scams but also misinformation, harmful content, technical threats, etc. Tailor to the Philippine context when relevant).
- "preventionStrategies": object with the following fields (provide strategies for different risk types):
    - "scamPrevention": array of strings (specific strategies for avoiding scams)
    - "misinformationDefense": array of strings (methods to verify information accuracy)
    - "privacyProtection": array of strings (ways to safeguard personal information)
    - "technicalSafeguards": array of strings (technical measures to protect devices/accounts)
    - "generalSafetyPractices": array of strings (broader digital safety practices)
- "reportingInfo": object with the following fields:
    - "introduction": string (A detailed introduction in English on the importance of reporting ALL types of harmful content, the impact of reporting, and the general process. Include information on what evidence to gather before reporting different types of harmful content).
    - "agencies": array of objects, where each object has:
        - "name": string (The official name of the agency or organization, prioritizing Philippine agencies followed by relevant international bodies).
        - "riskTypes": array of strings (The types of risks this agency handles: "scams", "cybercrime", "misinformation", "harmful content", etc.)
        - "url": string (The direct URL to their complaint filing page or relevant information page. Verify this is a valid, working URL).
        - "description": string (A detailed description of which types of risks the agency handles, their jurisdiction, and any special reporting requirements or procedures. Prioritize agencies relevant to the Philippines).
- "contentEvaluation": string (Provide a detailed explanation in English on how to critically evaluate content safety and truthfulness, specifically related to the analyzed content. Include verification techniques for multiple risk dimensions - not just scams but also factual accuracy, source credibility, manipulation tactics, technical threats, etc. Include warning signs, critical thinking strategies, and content verification methods tailored to the specific types of risks identified. Use concrete examples where possible).
- "contentEvaluationTagalog": string (A natural, culturally-appropriate Tagalog translation of the "contentEvaluation" explanation that preserves all technical advice).
- "contentClassification": object with the following fields:
    - "contentType": string (Classify what type of content this is: website URL, social media post, SMS, email, advertisement, news, etc.)
    - "contentPurpose": string (Detailed explanation of what this content is trying to accomplish, including potential hidden purposes)
    - "audienceAnalysis": object with the following fields:
        - "targetAudience": string (Who is the target audience for this content)
        - "vulnerabilityFactors": array of strings (Specific factors that might make the target audience vulnerable)
        - "potentialImpact": string (The potential effect or harm this content could have on its audience)
    - "trustworthinessIndicators": object with the following fields:
        - "positiveIndicators": array of strings (Elements that suggest the content may be legitimate or trustworthy)
        - "negativeIndicators": array of strings (Elements that raise concerns about trustworthiness)
        - "overallAssessment": string (Final evaluation of content trustworthiness)
    - "contentExplanation": string (A concise yet thorough explanation of what this content is, its purpose, legitimacy concerns, and ALL potential risks in plain language that non-technical users will understand. For websites, include what the site is for and potential dangers)
    - "contentExplanationTagalog": string (A natural Tagalog translation of the content explanation that ordinary Filipino users can easily understand)
    - "riskSummary": string (A brief, clear summary of ALL risks identified that a user should be aware of before engaging with this content)

${imageBase64 ? "When analyzing the provided image, perform a comprehensive risk assessment including: digital manipulation indicators, inconsistent lighting/shadows, misaligned text elements, false/edited logos, suspicious QR codes, harmful URLs, malicious instructions, dangerous advice, manipulated documents, false health claims, misleading statistics/charts, hidden data, steganography, malicious code embedding attempts, tracking pixels, inappropriate material, personal data exposure, confidential information, and visual persuasion techniques. Pay special attention to text in the image for risk indicators in both English and Filipino/Tagalog." : ""}

Additional analysis instructions:
1. For borderline cases, err on the side of caution and provide more detailed warnings and verification steps.
2. If you identify a novel scam technique not widely documented, highlight this in your analysis.
3. If the content appears to be testing your capabilities rather than a real scam, still provide a thorough analysis as if it were a genuine submission.
4. If the content is extremely short or ambiguous, note the limitations in your confidence assessment but provide best-effort analysis.
5. For content in Filipino languages/dialects other than Tagalog, identify the language if possible and include this information in your analysis.
6. If you detect a question like "Para saan ito?" (What is this for?) or "Ano ito?" (What is this?), focus your analysis on explaining the nature and purpose of the content/website in simple, accessible language in both English and Tagalog.
7. For website URLs, perform deeper domain analysis to determine its purpose, registration history, and security status if possible.
8. Pay special attention to Filipino cultural context that might make certain scams more effective in the Philippines (remittance services, OFW targeting, local payment systems).
9. Provide practical, step-by-step advice for typical Filipino internet users who may have varying levels of technical knowledge.

Ensure your entire response is ONLY the JSON object, with no additional text, comments, or markdown formatting like \`\`\`json ... \`\`\` around it. The JSON must be properly formatted and all string values properly escaped. Each field must be present in your response even if some have minimal information due to the nature of the content.

Text to analyze:
"""
${content}
"""`;

  try {
    // Prepare the request body
    const requestBody: any = {
      contents: [{
        parts: [{
          text: prompt
        }]
      }]
    };

    // If image is provided, add it to the request
    if (imageBase64) {
      requestBody.contents[0].parts.push({
        inline_data: {
          mime_type: 'image/jpeg', // Assuming JPEG format - adjust as needed
          data: imageBase64
        }
      });
    }

    const response = await fetch(GEMINI_API_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(requestBody),
    });

    if (!response.ok) {
      const errorBody = await response.text();
      console.error('Gemini API Error Response:', errorBody);
      throw new Error(`Gemini API request failed with status ${response.status}: ${errorBody}`);
    }
    
    const data: GeminiApiResponse = await response.json();
    console.log('Gemini API Full Raw Response Object:', JSON.stringify(data, null, 2));
    
    // Extract the text content from the response
    const textContent = data.candidates?.[0]?.content?.parts?.[0]?.text;
    if (!textContent) {
      throw new Error('No text content found in Gemini response');
    }
    
    try {
      // Clean the text content to remove markdown backticks if present
      let cleanedTextContent = textContent.trim();
      if (cleanedTextContent.startsWith("```json")) {
        cleanedTextContent = cleanedTextContent.substring(7); // Remove ```json
      }
      if (cleanedTextContent.endsWith("```")) {
        cleanedTextContent = cleanedTextContent.substring(0, cleanedTextContent.length - 3); // Remove ```
      }
      cleanedTextContent = cleanedTextContent.trim(); // Trim any remaining whitespace

      // Parse the JSON response directly
      const jsonResponse = JSON.parse(cleanedTextContent);
      return jsonResponse;
    } catch (error) {
      console.error('Error parsing JSON from Gemini response:', error);
      throw new Error(`Failed to parse JSON from Gemini response: ${(error as Error).message}`);
    }

  } catch (error) {
    console.error('Error calling Gemini API:', error);
    throw error; // Re-throw the error to be caught by the POST handler
  }
}

export async function POST(request: NextRequest) {
  if (!GEMINI_API_KEY) {
    console.error('Gemini API key is not configured. Please set GEMINI_API_KEY environment variable.');
    return NextResponse.json({ message: 'API key not configured. Please contact support.' }, { status: 500 });
  }
  try {
    const body = await request.json();
    const { content, imageBase64, audioBase64 } = body;  // Accept optional image and audio data    
    
    // Allow content to be empty if an image or audio is provided
    if ((!content || typeof content !== 'string') && !imageBase64 && !audioBase64) {
      return NextResponse.json({ message: 'Either text content, image, or audio recording is required' }, { status: 400 });
    }
    
    // Use empty string if content is not provided but image/audio is
    const textContent = content || '';
    
    if (audioBase64) {
      // Handle audio analysis specially
      const analysis = await analyzeWithGeminiAudio(textContent, audioBase64, imageBase64);
      return NextResponse.json(analysis, { status: 200 });
    } else {
      // Standard text/image analysis
      const analysis = await analyzeWithGemini(textContent, imageBase64);
      return NextResponse.json(analysis, { status: 200 });
    }

  } catch (error: any) {
    console.error('Error in /api/detect-scam:', error);
    return NextResponse.json({ message: error.message || 'Internal Server Error' }, { status: 500 });
  }
}
